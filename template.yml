AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy FastAPI - AWS Lambda with API Gateway


Metadata:
###################################################################################################
#                                            METADATA                                             #
###################################################################################################

  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Project based parameters"
        Parameters:
          - AppName
      - Label:
          default: "Lambda Function Parameters"
        Parameters:
          - ECRUri
          - Environment
          - BucketName
          - RecipesFile
          - RefrigeratorFile
      - Label:
          default: "API Gateway parameters"
        Parameters:
          - StageName



Parameters:
###################################################################################################
#                                             PARAMETERS                                          #
###################################################################################################
  

#############################################################################
#                          Project based parameters                         #
#############################################################################
 
  AppName:
    Type: String
    Default: health-being-app
    Description: Name of application.


#############################################################################
#                         Lambda Function Parameters                        #
#############################################################################

  BucketName:
    Type: String
    Default: health-being-server-api
    Description: Name of the S3 bucket for test datasets

  RecipesFile:
    Type: String
    Default: database_recipes.json
    Description: Name of the recipes file in the S3 bucket

  RefrigeratorFile:
    Type: String
    Default: database_refrigerator.json
    Description: Name of the refrigerator file in the S3 bucket

  ECRUri:
    Type: String
    Default: 199215058137.dkr.ecr.eu-north-1.amazonaws.com/my-fastapi-lambda:latest
    Description: ECR image URI for the Lambda function

  Environment:
    Type: String
    Default: remote
    Description: Environment for the Lambda function

  

#############################################################################
#                           API Gateway parameters                          #
#############################################################################

  StageName:
    Type: String
    AllowedValues:
      - dev
      - prod
    Default: dev
    Description: The name of the API Gateway stage



Resources:
###################################################################################################
#                                     Lambda Configuration                                        #
###################################################################################################


#############################################################################
#                              Lambda base config                           #
#############################################################################

  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${AppName}-lambda"
      Role: !GetAtt LambdaRole.Arn
      PackageType: Image
      Code:
        ImageUri: !Ref 'ECRUri'
      Architectures:
        - x86_64
      MemorySize: 3008
      Timeout: 300
      Environment:
        Variables:
          BUCKET_NAME: !Ref BucketName
          RECIPES_FILE: !Ref RecipesFile
          ENVIRONMENT: !Ref Environment
          REFRIGERATOR_FILE: !Ref RefrigeratorFile


#############################################################################
#                              Lambda permissions                           #
#############################################################################

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
      # S3 Access Policy
        - PolicyName: S3AccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:ListBucket
                Resource:
                  - !Sub arn:aws:s3:::${BucketName}
                  - !Sub arn:aws:s3:::${BucketName}/*
      # ECR Access Policy
        - PolicyName: LambdaECRImagePullPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ecr:BatchGetImage
                  - ecr:GetDownloadUrlForLayer
                  - ecr:DescribeImages
                Resource: !Sub arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/my-fastapi-lambda
              - Effect: Allow
                Action: ecr:GetAuthorizationToken
                Resource: '*'

                
###################################################################################################
#                                     API Gateway Configuration                                   #
###################################################################################################


#############################################################################
#                           API Gateway base config                         #
#############################################################################
 
  ApiGateway:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: !Sub "${AppName}-api"
      ProtocolType: HTTP
      CorsConfiguration:
        AllowOrigins: ["*"]
        AllowMethods: ["*"]
        AllowHeaders: ["*"]
  
#############################################################################
#                            API Gateway Resources                          #
#############################################################################

  ApiGatewayMethod:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref ApiGateway
      IntegrationMethod: POST
      IntegrationType: AWS_PROXY
      IntegrationUri: !GetAtt LambdaFunction.Arn
      PayloadFormatVersion: "2.0"

  ApiGatewayResourceRoot:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref ApiGateway
      RouteKey: "ANY /{proxy+}"
      Target: !Join
        - /
        - - integrations
          - !Ref ApiGatewayMethod



#############################################################################
#                          API Gateway Permission                           #
#############################################################################

  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !GetAtt LambdaFunction.Arn
      Principal: "apigateway.amazonaws.com"
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGateway}/*/*/*"



#############################################################################
#                            API Gateway Stage                              #
#############################################################################

  ApiGatewayStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref ApiGateway
      DeploymentId: !Ref ApiGatewayDeployment
      StageName: !Ref StageName
      AutoDeploy: true

  ApiGatewayDeployment:
    Type: AWS::ApiGatewayV2::Deployment
    DependsOn:
      - ApiGatewayMethod
      - ApiGatewayResourceRoot
    Properties:
      Description: Lambda API Deployment
      ApiId: !Ref ApiGateway



###################################################################################################
#                                             OUTPUTS                                             #
###################################################################################################

Outputs:
  ApiEndpoint:
    Description: API Gateway endpoint URL
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${StageName}"
    Export:
      Name: !Sub "${AppName}-ApiEndpoint"
